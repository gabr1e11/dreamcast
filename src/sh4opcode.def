/* Definition of all opcodes for the SH4 processor. The
   format is as follows:

   { <opcode1>, <mnemonic1> },
   { <opcode2>, <mnemonic2> },
	...
   { "<opcodeN>", "<mnemonicN>" }

  where:
	<opcode> is the binary generic representation of the opcode. In this representation any
             combination of '1', '0' and any letter is allowed, with a maximum of 3 different
             letter symbols. Each letter is considered an opcode parameter and the number of
			 letters of the same symbol is used to determine its size in bits. For example:

                   0101mmnn0000dddd

			 Indicates 3 parameters: m, n and d, with respectively 2, 2 and 4 bits

	<mnemonic> is a string representing the mnemonic associated to the opcode. For this
               representation the special pair %<letter> is allowed to indicate where the
               parameter defined in <opcode> fits in the disassembled mnemonic. For example,
               taking into account the opcode defined in the previous example:

                   ldc @(%d,r%m),r%n

  This file is intended to be included inside a struct array definition like:

    struct {
        char opcode[17];
        char mnemonic[32];
	} opcodeDefs[] = {
        #include "sh4opcode.def"
    }
*/
{ "0000000000000000", "EXCEPTION" },            /* Use as default for non-defined entries */
{ "1110nnnniiiiiiii", "mov     #%i,r%n" },
{ "1001nnnndddddddd", "mov.w   @(%d,pc),r%n" },
{ "1101nnnndddddddd", "mov.l   @(%d,pc),r%n" },
{ "0110nnnnmmmm0011", "mov     r%m,r%n" },
{ "0010nnnnmmmm0000", "mov.b   r%m,@r%n" },
{ "0010nnnnmmmm0001", "mov.w   r%m,@r%n" },
{ "0010nnnnmmmm0010", "mov.l   r%m,@r%n" },
{ "0110nnnnmmmm0000", "mov.b   @r%m,r%n" },
{ "0110nnnnmmmm0001", "mov.w   @r%m,r%n" },
{ "0110nnnnmmmm0010", "mov.l   @r%m,r%n" },
{ "0010nnnnmmmm0100", "mov.b   r%m,@-r%n" },
{ "0010nnnnmmmm0101", "mov.w   r%m,@-r%n" },
{ "0010nnnnmmmm0110", "mov.l   r%m,@-r%n" },
{ "0110nnnnmmmm0100", "mov.b   @r%m+,r%n" },
{ "0110nnnnmmmm0101", "mov.w   @r%m+,r%n" },
{ "0110nnnnmmmm0110", "mov.l   @r%m+,r%n" },
{ "10000000nnnndddd", "mov.b   r0,@(%d,r%n)" },
{ "10000001nnnndddd", "mov.w   r0,@(%d,r%n)" },
{ "0001nnnnmmmmdddd", "mov.l   r%m,@(%d,r%n)" },
{ "10000100mmmmdddd", "mov.b   @(%d,r%m),r0" },
{ "10000101mmmmdddd", "mov.w   @(%d,r%m),r0" },
{ "0101nnnnmmmmdddd", "mov.l   @(%d,r%m),r%n" },
{ "0000nnnnmmmm0100", "mov.b   r%m,@(r0,r%n)" },
{ "0000nnnnmmmm0101", "mov.w   r%m,@(r0,r%n)" },
{ "0000nnnnmmmm0110", "mov.l   r%m,@(r0,r%n)" },
{ "0000nnnnmmmm1100", "mov.b   @(r0,r%m),r%n" },
{ "0000nnnnmmmm1101", "mov.w   @(r0,r%m),r%n" },
{ "0000nnnnmmmm1110", "mov.l   @(r0,r%m),r%n" },
{ "11000000dddddddd", "mov.b   r0,@(%d,gbr)" },
{ "11000001dddddddd", "mov.w   r0,@(%d,gbr)" },
{ "11000010dddddddd", "mov.l   r0,@(%d,gbr)" },
{ "11000100dddddddd", "mov.b   @(%d,gbr),r0" },
{ "11000101dddddddd", "mov.w   @(%d,gbr),r0" },
{ "11000110dddddddd", "mov.l   @(%d,gbr),r0" },
{ "11000111dddddddd", "mova    @(%d,pc),r0" },
{ "0000nnnn00101001", "movt    r%n" },
{ "0110nnnnmmmm1000", "swap.b  r%m,r%n" },
{ "0110nnnnmmmm1001", "swap.w  r%m,r%n" },
{ "0010nnnnmmmm1101", "xtrct   r%m,r%n" },
{ "0011nnnnmmmm1100", "add     r%m,r%n" },
{ "0111nnnniiiiiiii", "add     #%i,r%n" },
{ "0011nnnnmmmm1110", "addc    r%m,r%n" },
{ "0011nnnnmmmm1111", "addv    r%m,r%n" },
{ "10001000iiiiiiii", "cmp/eq  #%i,r0" },
{ "0011nnnnmmmm0000", "cmp/eq  r%m,r%n" },
{ "0011nnnnmmmm0010", "cmp/hs  r%m,r%n" },
{ "0011nnnnmmmm0011", "cmp/ge  r%m,r%n" },
{ "0011nnnnmmmm0110", "cmp/hi  r%m,r%n" },
{ "0011nnnnmmmm0111", "cmp/gt  r%m,r%n" },
{ "0100nnnn00010001", "cmp/pz  r%n" },
{ "0100nnnn00010101", "cmp/pl  r%n" },
{ "0010nnnnmmmm1100", "cmp/str r%m,r%n" },
{ "0011nnnnmmmm0100", "div1    r%m,r%n" },
{ "0010nnnnmmmm0111", "div0s   r%m,r%n" },
{ "0000000000011001", "div0u" },
{ "0011nnnnmmmm1101", "dmuls.l r%m,r%n" },
{ "0011nnnnmmmm0101", "dmulu.l r%m,r%n" },
{ "0100nnnn00010000", "dt      r%n" },
{ "0110nnnnmmmm1110", "exts.b  r%m,r%n" },
{ "0110nnnnmmmm1111", "exts.w  r%m,r%n" },
{ "0110nnnnmmmm1100", "extu.b  r%m,r%n" },
{ "0110nnnnmmmm1101", "extu.w  r%m,r%n" },
{ "0000nnnnmmmm1111", "mac.l   @r%m+,@r%n+" },
{ "0100nnnnmmmm1111", "mac.w   @r%m+,@r%n+" },
{ "0000nnnnmmmm0111", "mul.l   r%m,r%n" },
{ "0010nnnnmmmm1111", "muls.w  r%m,r%n" },
{ "0010nnnnmmmm1110", "mulu.w  r%m,r%n" },
{ "0110nnnnmmmm1011", "neg     r%m,r%n" },
{ "0110nnnnmmmm1010", "negc    r%m,r%n" },
{ "0011nnnnmmmm1000", "sub     r%m,r%n" },
{ "0011nnnnmmmm1010", "subc    r%m,r%n" },
{ "0011nnnnmmmm1011", "subv    r%m,r%n" },
{ "0010nnnnmmmm1001", "and     r%m,r%n" },
{ "11001001iiiiiiii", "and     #%i,r0" },
{ "11001101iiiiiiii", "and.b   #%i,@(r0,gbr)" },
{ "0110nnnnmmmm0111", "not     r%m,r%n" },
{ "0010nnnnmmmm1011", "or      r%m,r%n" },
{ "11001011iiiiiiii", "or      #%i,r0" },
{ "11001111iiiiiiii", "or.b    #%i,@(r0,gbr)" },
{ "0100nnnn00011011", "tas.b   @r%n" },
{ "0010nnnnmmmm1000", "tst     r%m,r%n" },
{ "11001000iiiiiiii", "tst     #%i,r0" },
{ "11001100iiiiiiii", "tst.b   #%i,@(r0,gbr)" },
{ "0010nnnnmmmm1010", "xor     r%m,r%n" },
{ "11001010iiiiiiii", "xor     #%i,r0" },
{ "11001110iiiiiiii", "xor.b   #%i,@(r0,gbr)" },
{ "0100nnnn00000100", "rotl    r%n" },
{ "0100nnnn00000101", "rotr    r%n" },
{ "0100nnnn00100100", "rotcl   r%n" },
{ "0100nnnn00100101", "rotcr   r%n" },
{ "0100nnnnmmmm1100", "shad    r%m,r%n" },
{ "0100nnnn00100000", "shal    r%n" },
{ "0100nnnn00100001", "shar    r%n" },
{ "0100nnnnmmmm1101", "shld    r%m,r%n" },
{ "0100nnnn00000000", "shll    r%n" },
{ "0100nnnn00000001", "shlr    r%n" },
{ "0100nnnn00001000", "shll2   r%n" },
{ "0100nnnn00001001", "shlr2   r%n" },
{ "0100nnnn00011000", "shll8   r%n" },
{ "0100nnnn00011001", "shlr8   r%n" },
{ "0100nnnn00101000", "shll16  r%n" },
{ "0100nnnn00101001", "shlr16  r%n" },
{ "10001011dddddddd", "bf      %d" },
{ "10001111dddddddd", "bf/s    %d" },
{ "10001001dddddddd", "bt      %d" },
{ "10001101dddddddd", "bt/s    %d" },
{ "1010dddddddddddd", "bra     %d" },
{ "0000nnnn00100011", "braf    r%n" },
{ "1011dddddddddddd", "bsr     %d" },
{ "0000nnnn00000011", "bsrf    r%n" },
{ "0100nnnn00101011", "jmp     @r%n" },
{ "0100nnnn00001011", "jsr     @r%n" },
{ "0000000000001011", "rts" },
{ "0000000000101000", "clrmac" },
{ "0000000001001000", "clrs" },
{ "0000000000001000", "clrt" },
{ "0100mmmm00001110", "ldc     r%m,sr" },
{ "0100mmmm00011110", "ldc     r%m,gbr" },
{ "0100mmmm00101110", "ldc     r%m,vbr" },
{ "0100mmmm00111110", "ldc     r%m,ssr" },
{ "0100mmmm01001110", "ldc     r%m,spc" },
{ "0100mmmm11111010", "ldc     r%m,dbr" },
{ "0100mmmm1nnn1110", "ldc     r%m,r%n_bank" },
{ "0100mmmm00000111", "ldc.l   @r%m+,sr" },
{ "0100mmmm00010111", "ldc.l   @r%m+,gbr" },
{ "0100mmmm00100111", "ldc.l   @r%m+,vbr" },
{ "0100mmmm00110111", "ldc.l   @r%m+,ssr" },
{ "0100mmmm01000111", "ldc.l   @r%m+,spc" },
{ "0100mmmm11110110", "ldc.l   @r%m+,dbr" },
{ "0100mmmm1nnn0111", "ldc.l   @r%m+,r%n_bank" },
{ "0100mmmm00001010", "lds     r%m,mach" },
{ "0100mmmm00011010", "lds     r%m,macl" },
{ "0100mmmm00101010", "lds     r%m,pr" },
{ "0100mmmm00000110", "lds.l   @r%m+,mach" },
{ "0100mmmm00010110", "lds.l   @r%m+,macl" },
{ "0100mmmm00100110", "lds.l   @r%m+,pr" },
{ "0000000000111000", "ldtlb" },
{ "0000nnnn11000011", "movca.l r0,@r%n" },
{ "0000000000001001", "nop" },
{ "0000nnnn10010011", "ocbi    @r%n" },
{ "0000nnnn10100011", "ocbp    @r%n" },
{ "0000nnnn10110011", "ocbwb   @r%n" },
{ "0000nnnn10000011", "pref    @r%n" },
{ "0000000000101011", "rte" },
{ "0000000001011000", "sets" },
{ "0000000000011000", "sett" },
{ "0000000000011011", "sleep" },
{ "0000nnnn00000010", "stc     sr,r%n" },
{ "0000nnnn00010010", "stc     gbr,r%n" },
{ "0000nnnn00100010", "stc     vbr,r%n" },
{ "0000nnnn00110010", "stc     ssr,r%n" },
{ "0000nnnn01000010", "stc     spc,r%n" },
{ "0000nnnn00111010", "stc     sgr,r%n" },
{ "0000nnnn11111010", "stc     dbr,r%n" },
{ "0000nnnn1mmm0010", "stc     r%m_bank,r%n" },
{ "0100nnnn00000011", "stc.l   sr,@-r%n" },
{ "0100nnnn00010011", "stc.l   gbr,@-r%n" },
{ "0100nnnn00100011", "stc.l   vbr,@-r%n" },
{ "0100nnnn00110011", "stc.l   ssr,@-r%n" },
{ "0100nnnn01000011", "stc.l   spc,@-r%n" },
{ "0100nnnn00110010", "stc.l   sgr,@-r%n" },
{ "0100nnnn11110010", "stc.l   dbr,@-r%n" },
{ "0100nnnn1mmm0011", "stc.l   r%m_bank,@-r%n" },
{ "0000nnnn00001010", "sts     mach,r%n" },
{ "0000nnnn00011010", "sts     macl,r%n" },
{ "0000nnnn00101010", "sts   pr,r%n" },
{ "0100nnnn00000010", "sts.l   mach,@-r%n" },
{ "0100nnnn00010010", "sts.l   macl,@-r%n" },
{ "0100nnnn00100010", "sts.l   pr,@-r%n" },
{ "11000011iiiiiiii", "trapa   #%i" },
{ "1111nnnn10001101", "fldi0   fr%n" },
{ "1111nnnn10011101", "fldi1   fr%n" },
{ "1111nnnnmmmm1100", "fmov    fr%m,fr%n" },
{ "1111nnnnmmmm1000", "fmov.s  @r%m,fr%n" },
{ "1111nnnnmmmm0110", "fmov.s  @(r0,r%m),fr%n" },
{ "1111nnnnmmmm1001", "fmov.s  @r%m+,fr%n" },
{ "1111nnnnmmmm1010", "fmov.s  fr%m,@r%n" },
{ "1111nnnnmmmm1011", "fmov.s  fr%m,@-r%n" },
{ "1111nnnnmmmm0111", "fmov.s  fr%m,@(r0,r%n)" },
{ "1111nnn0mmm01100", "fmov    dr%m,dr%n" },
{ "1111nnn0mmmm1000", "fmov    @r%m,dr%n" },
{ "1111nnn0mmmm0110", "fmov    @(r0,r%m),dr%n" },
{ "1111nnn0mmmm1001", "fmov    @r%m+,dr%n" },
{ "1111nnnnmmm01010", "fmov    dr%m,@r%n" },
{ "1111nnnnmmm01011", "fmov    dr%m,@-r%n" },
{ "1111nnnnmmm00111", "fmov    dr%m,@(r0,r%n)" },
{ "1111mmmm00011101", "flds    fr%m,fpul" },
{ "1111nnnn00001101", "fsts    fpul,fr%n" },
{ "1111nnnn01011101", "fabs    fr%n" },
{ "1111nnnnmmmm0000", "fadd    fr%m,fr%n" },
{ "1111nnnnmmmm0100", "fcmp/eq fr%m,fr%n" },
{ "1111nnnnmmmm0101", "fcmp/gt fr%m,fr%n" },
{ "1111nnnnmmmm0011", "fdiv    fr%m,fr%n" },
{ "1111nnnn00101101", "float   fpul,fr%n" },
{ "1111nnnnmmmm1110", "fmac    fr0,fr%m,fr%n" },
{ "1111nnnnmmmm0010", "fmul    fr%m,fr%n" },
{ "1111nnnn01001101", "fneg    fr%n" },
{ "1111nnnn01101101", "fsqrt   fr%n" },
{ "1111nnnnmmmm0001", "fsub    fr%m,fr%n" },
{ "1111mmmm00111101", "ftrc    fr%m,fpul" },
{ "1111nnn001011101", "fabs    dr%n" },
{ "1111nnn0mmm00000", "fadd    dr%m,dr%n" },
{ "1111nnn0mmm00100", "fcmp/eq dr%m,dr%n" },
{ "1111nnn0mmm00101", "fcmp/gt dr%m,dr%n" },
{ "1111nnn0mmm00011", "fdiv    dr%m,dr%n" },
{ "1111mmm010111101", "fcnvds  dr%m,fpul" },
{ "1111nnn010101101", "fcnvsd  fpul,dr%n" },
{ "1111nnn000101101", "float   fpul,dr%n" },
{ "1111nnn0mmm00010", "fmul    dr%m,dr%n" },
{ "1111nnn001001101", "fneg    dr%n" },
{ "1111nnn001101101", "fsqrt   dr%n" },
{ "1111nnn0mmm00001", "fsub    dr%m,dr%n" },
{ "1111mmm000111101", "ftrc    dr%m,fpul" },
{ "0100mmmm01101010", "lds     r%m,fpscr" },
{ "0100mmmm01011010", "lds     r%m,fpul" },
{ "0100mmmm01100110", "lds.l   @r%m+,fpscr" },
{ "0100mmmm01010110", "lds.l   @r%m+,fpul" },
{ "0000nnnn01101010", "sts     fpscr,r%n" },
{ "0000nnnn01011010", "sts     fpul,r%n" },
{ "0100nnnn01100010", "sts.l   fpscr,@-r%n" },
{ "0100nnnn01010010", "sts.l   fpul,@-r%n" },
{ "1111nnn1mmm01100", "fmov    dr%m,xd%n" },
{ "1111nnn0mmm11100", "fmov    xd%m,dr%n" },
{ "1111nnn1mmm11100", "fmov    xd%m,xd%n" },
{ "1111nnn1mmmm1000", "fmov    @r%m,xd%n" },
{ "1111nnn1mmmm1001", "fmov    @r%m+,xd%n" },
{ "1111nnn1mmmm0110", "fmov    @(r0,r%m),dr%n" },
{ "1111nnnnmmm11010", "fmov    xd%m,@r%n" },
{ "1111nnnnmmm11011", "fmov    xd%m,@-r%n" },
{ "1111nnnnmmm10111", "fmov    xd%m,@(r0,r%n)" },
{ "1111nnmm11101101", "fipr    fv%m,fv%n" },
{ "1111nn0111111101", "ftrv    xmtrx,fv%n" },
{ "1111101111111101", "frchg" },
{ "1111001111111101", "fschg" },
